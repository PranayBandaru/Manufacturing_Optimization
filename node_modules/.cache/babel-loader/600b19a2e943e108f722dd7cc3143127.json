{"ast":null,"code":"var input = [{\n  product: \"XPS\",\n  backlog: 15,\n  sales: 12,\n  extra: 20\n}, {\n  product: \"Vostro\",\n  backlog: 10,\n  sales: 16,\n  extra: 12\n}, {\n  product: \"GSeries\",\n  backlog: 4,\n  sales: 15,\n  extra: 2\n}, {\n  product: \"Inspiron\",\n  backlog: 9,\n  sales: 10,\n  extra: 17\n}];\nvar times = {\n  XPS: [2, 3, 2],\n  //XPS\n  Inspiron: [2, 2, 2],\n  //Inspiron\n  Vostro: [1, 2, 1],\n  //Vostro\n  GSeries: [3, 3, 1] //GSeries\n\n};\nvar n_lines = 6;\n\nconst initialise = arr => {\n  for (var i = 0; i < 336; i++) {\n    arr[i] = 0;\n  }\n\n  return arr;\n};\n\ninput.sort((a, b) => {\n  return a.backlog - b.backlog;\n}); //console.log(input)\n\nvar line_1 = {\n  step1: initialise(new Array(336)),\n  step2: initialise(new Array(336)),\n  step3: initialise(new Array(336))\n};\nvar line_2 = {\n  step1: initialise(new Array(336)),\n  step2: initialise(new Array(336)),\n  step3: initialise(new Array(336))\n};\nvar line_3 = {\n  step1: initialise(new Array(336)),\n  step2: initialise(new Array(336)),\n  step3: initialise(new Array(336))\n};\nvar line_4 = {\n  step1: initialise(new Array(336)),\n  step2: initialise(new Array(336)),\n  step3: initialise(new Array(336))\n};\nvar line_5 = {\n  step1: initialise(new Array(336)),\n  step2: initialise(new Array(336)),\n  step3: initialise(new Array(336))\n};\nvar line_6 = {\n  step1: initialise(new Array(336)),\n  step2: initialise(new Array(336)),\n  step3: initialise(new Array(336))\n};\nvar lines = [line_1, line_2, line_3, line_4, line_5, line_6]; // console.log(line_4.step2[50]);\n\nvar backlogs = [];\nvar sales = [];\nvar extra = []; //-----------------------------------------------FIRST INDEX--------------------------------------------------\n\nfunction first_index(lines, step_no, min) {\n  //console.log(lines);\n  var min_index = 336;\n  var min_line_no;\n  step_no = String(\"step\" + step_no);\n\n  for (var i = 0; i < lines.length; i++) {\n    for (var k = min; k < 336; k++) {\n      if (lines[i][step_no][k] == 0 && k < min_index) {\n        min_index = k;\n        min_line_no = i + 1;\n        break;\n      }\n    }\n  }\n\n  return [min_index, min_line_no];\n} //-----------------------------------------------OPTIMIZE--------------------------------------------------\n\n\nexport const optimize = input => {\n  var temp_swap;\n  var loc;\n\n  for (var i = 0; i < 4; i++) {\n    backlogs.push({\n      product: input[i].product,\n      backlog: input[i].backlog\n    });\n  }\n\n  for (var i = 0; i < 4; i++) {\n    sales.push({\n      product: input[i].product,\n      sales: input[i].sales\n    });\n  }\n\n  for (var i = 0; i < 4; i++) {\n    extra.push({\n      product: input[i].product,\n      extra: input[i].extra\n    });\n  } //console.log(backlogs);\n  //----------------------------------------------SORT----------------------------------------------------------\n\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      if (backlogs[j].backlog < backlogs[j + 1].backlog) {\n        temp_swap = backlogs[j].backlog;\n        backlogs[j].backlog = backlogs[j + 1].backlog;\n        backlogs[j + 1].backlog = temp_swap;\n        temp_swap = backlogs[j].product;\n        backlogs[j].product = backlogs[j + 1].product;\n        backlogs[j + 1].product = temp_swap;\n      }\n    }\n  }\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      if (sales[j].sales < sales[j + 1].sales) {\n        temp_swap = sales[j].sales;\n        sales[j].sales = sales[j + 1].sales;\n        sales[j + 1].sales = temp_swap;\n        temp_swap = sales[j].product;\n        sales[j].product = sales[j + 1].product;\n        sales[j + 1].product = temp_swap;\n      }\n    }\n  }\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      if (extra[j].extra < extra[j + 1].extra) {\n        temp_swap = extra[j].extra;\n        extra[j].extra = extra[j + 1].extra;\n        extra[j + 1].extra = temp_swap;\n        temp_swap = extra[j].product;\n        extra[j].product = extra[j + 1].product;\n        extra[j + 1].product = temp_swap;\n      }\n    }\n  } //----------------------------------------------SORT END----------------------------------------------------------\n\n\n  console.log(backlogs); //console.log(times[p_name][0]);\n\n  var step_complete = {\n    step1: 0,\n    step2: 0,\n    step3: 0\n  };\n  var step_ends = {\n    step1: 0,\n    step2: 0,\n    step3: 0\n  }; //---------------------------------------------BACKLOGS-----------------------------------------------------------\n\n  for (var lv = 0; lv < 4; lv++) {\n    var p1_backlogs = backlogs[lv].backlog;\n    var p_name = backlogs[lv].product;\n\n    for (var i = 0; i < backlogs[lv].backlog; i++) {\n      if (p1_backlogs > 0) {\n        loc = first_index(lines, 1, 0);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][0]; j++) {\n          lines[loc[1] - 1].step1[loc[0] + j] = backlogs[lv].product;\n          step_ends.step1 = loc[0] + j + 1;\n        }\n\n        p1_backlogs--;\n        step_complete.step1++;\n      }\n\n      if (step_complete.step1 > 0) {\n        loc = first_index(lines, 2, step_ends.step1);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][1]; j++) {\n          lines[loc[1] - 1].step2[loc[0] + j] = backlogs[lv].product;\n          step_ends.step2 = loc[0] + j + 1;\n        }\n\n        step_complete.step1--;\n        step_complete.step2++;\n      }\n\n      if (step_complete.step2 > 0) {\n        loc = first_index(lines, 3, step_ends.step2);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][2]; j++) {\n          lines[loc[1] - 1].step3[loc[0] + j] = backlogs[lv].product;\n          step_ends.step3 = loc[0] + j + 1;\n        }\n\n        step_complete.step2--;\n        step_complete.step3++; //console.log(lines[loc[1]].step1[loc[0]] );\n      }\n    }\n  } //---------------------------------------------SALES-----------------------------------------------------------\n\n\n  for (var lv = 0; lv < 4; lv++) {\n    var p1_sales = sales[lv].sales;\n    var p_name = sales[lv].product;\n\n    for (var i = 0; i < sales[lv].sales; i++) {\n      if (p1_sales > 0) {\n        loc = first_index(lines, 1, 0);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][0]; j++) {\n          lines[loc[1] - 1].step1[loc[0] + j] = sales[lv].product;\n        }\n\n        p1_sales--;\n        step_complete.step1++;\n      }\n\n      if (step_complete.step1 > 0) {\n        loc = first_index(lines, 2, step_ends.step1);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][1]; j++) {\n          console.log(loc);\n          console.log(step_ends.step2);\n          lines[loc[1] - 1].step2[loc[0] + j] = sales[lv].product;\n        }\n\n        step_complete.step1--;\n        step_complete.step2++;\n      }\n\n      if (step_complete.step2 > 0) {\n        loc = first_index(lines, 3, step_ends.step2);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][2]; j++) {\n          lines[loc[1] - 1].step3[loc[0] + j] = sales[lv].product;\n        }\n\n        step_complete.step2--;\n        step_complete.step3++; //console.log(lines[loc[1]].step1[loc[0]] );\n      }\n    }\n  } //---------------------------------------------------EXTRA-----------------------------------------------------------\n\n\n  for (var lv = 0; lv < 4; lv++) {\n    var p1_extra = extra[lv].extra;\n    var p_name = extra[lv].product;\n\n    for (var i = 0; i < extra[lv].extra; i++) {\n      if (p1_extra > 0) {\n        loc = first_index(lines, 1, 0);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][0]; j++) {\n          lines[loc[1] - 1].step1[loc[0] + j] = extra[lv].product;\n          step_ends.step1 = loc[0] + j + 1;\n        }\n\n        p1_extra--;\n        step_complete.step1++;\n      }\n\n      if (step_complete.step1 > 0) {\n        loc = first_index(lines, 2, step_ends.step1);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][1]; j++) {\n          lines[loc[1] - 1].step2[loc[0] + j] = extra[lv].product;\n          step_ends.step2 = loc[0] + j + 1;\n        }\n\n        step_complete.step1--;\n        step_complete.step2++;\n      }\n\n      if (step_complete.step2 > 0) {\n        loc = first_index(lines, 3, step_ends.step2);\n\n        for (var t = 0; t < times[p_name][0]; t++) {\n          if ((loc[0] + t + 1) % 16 == 0) {\n            loc[0] = loc[0] + t + 1;\n          }\n        }\n\n        for (var j = 0; j < times[p_name][2]; j++) {\n          lines[loc[1] - 1].step3[loc[0] + j] = extra[lv].product;\n          step_ends.step3 = loc[0] + j + 1;\n        }\n\n        step_complete.step2--;\n        step_complete.step3++; //console.log(lines[loc[1]].step1[loc[0]] );\n      }\n    }\n  } //step_complete_temp = (step_complete.step1/6+1)*times[p_name][0]; \n\n  /*\r\n  console.log(step_complete);\r\n  for(var i = 0; i< step_complete_temp; i++){\r\n      for(var j = 0; j<6 && step_complete.step1>0; j++){\r\n          \r\n          for(var k =0; k<times[p_name][0]; k++){\r\n              lines[j].step1[i+k] = backlogs[0].product ;\r\n          }\r\n          step_complete.step1--;\r\n          step_complete.step2++;\r\n      }\r\n  }\r\n  */\n  //step_complete_temp = (step_complete.step1/6+1)*times[p_name][0]; \n\n\n  console.log(lines); //console.log(lines[1].step1[250])\n  //console.log(first_index(lines,1));\n};\noptimize(input); // bubble_Sort(backlogs)","map":{"version":3,"sources":["C:/Users/prana/OneDrive/Desktop/DELL-HackToHire/my-app/src/components/logic_Algo.js"],"names":["input","product","backlog","sales","extra","times","XPS","Inspiron","Vostro","GSeries","n_lines","initialise","arr","i","sort","a","b","line_1","step1","Array","step2","step3","line_2","line_3","line_4","line_5","line_6","lines","backlogs","first_index","step_no","min","min_index","min_line_no","String","length","k","optimize","temp_swap","loc","push","j","console","log","step_complete","step_ends","lv","p1_backlogs","p_name","t","p1_sales","p1_extra"],"mappings":"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","sourcesContent":["var input  = [ { product : \"XPS\" , backlog : 15 , sales: 12 , extra : 20}, { product : \"Vostro\" , backlog : 10 , sales: 16 , extra : 12},\r\n{ product : \"GSeries\" , backlog : 4 , sales: 15 , extra : 2}, { product : \"Inspiron\" , backlog : 9 , sales: 10 , extra : 17}]\r\nvar times = {\r\n    XPS:[2,3,2],    //XPS\r\n    Inspiron: [2,2,2],    //Inspiron\r\n    Vostro: [1,2,1],    //Vostro\r\n    GSeries: [3,3,1]     //GSeries\r\n};\r\n\r\nvar n_lines = 6;\r\n\r\nconst initialise = (arr)=> {\r\n    for(var i=0 ; i<336;i++){\r\n        arr[i] = 0;\r\n    }\r\n    return arr; \r\n}\r\n\r\ninput.sort((a,b)=>{\r\n    return a.backlog - b.backlog \r\n})\r\n\r\n//console.log(input)\r\n\r\nvar line_1 = {step1 : initialise(new Array(336)),step2 : initialise(new Array(336)), step3 : initialise(new Array(336)) }\r\nvar line_2 = {step1 : initialise(new Array(336)),step2 : initialise(new Array(336)), step3 : initialise(new Array(336)) }\r\nvar line_3 = {step1 : initialise(new Array(336)),step2 : initialise(new Array(336)), step3 : initialise(new Array(336)) }\r\nvar line_4 = {step1 : initialise(new Array(336)),step2 : initialise(new Array(336)), step3 : initialise(new Array(336)) }\r\nvar line_5 = {step1 : initialise(new Array(336)),step2 : initialise(new Array(336)), step3 : initialise(new Array(336)) }\r\nvar line_6 = {step1 : initialise(new Array(336)),step2 : initialise(new Array(336)), step3 : initialise(new Array(336)) }\r\n\r\nvar lines = [line_1, line_2, line_3, line_4, line_5, line_6];\r\n\r\n// console.log(line_4.step2[50]);\r\nvar backlogs = [];\r\nvar sales = [];\r\nvar extra = [];\r\n\r\n//-----------------------------------------------FIRST INDEX--------------------------------------------------\r\nfunction first_index(lines, step_no,min){\r\n    //console.log(lines);\r\n    var min_index = 336;\r\n    var min_line_no;\r\n    step_no = String(\"step\"+step_no);\r\n    for(var i = 0; i<lines.length; i++){\r\n        for(var k =min; k<336; k++){\r\n            if(lines[i][step_no][k] == 0 && k < min_index){\r\n                min_index = k;\r\n                min_line_no = i+1;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return([min_index, min_line_no]);\r\n}\r\n\r\n//-----------------------------------------------OPTIMIZE--------------------------------------------------\r\nexport const optimize = (input) => {\r\n    var temp_swap;\r\n    var loc;\r\n    for(var i=0;i<4;i++){\r\n        backlogs.push({product :input[i].product , backlog:  input[i].backlog})\r\n    }for(var i=0;i<4;i++){\r\n        sales.push({product :input[i].product , sales:  input[i].sales })\r\n    }for(var i=0;i<4;i++){\r\n        extra.push({product :input[i].product , extra:  input[i].extra })\r\n    }\r\n    //console.log(backlogs);\r\n    //----------------------------------------------SORT----------------------------------------------------------\r\n    for(var i =0; i<3;i++){\r\n        for(var j = 0; j<3;j++){\r\n            if(backlogs[j].backlog < backlogs[j+1].backlog){\r\n                temp_swap = backlogs[j].backlog;\r\n                backlogs[j].backlog = backlogs[j+1].backlog;\r\n                backlogs[j+1].backlog = temp_swap;\r\n\r\n                temp_swap = backlogs[j].product;\r\n                backlogs[j].product = backlogs[j+1].product;\r\n                backlogs[j+1].product = temp_swap;\r\n            }\r\n        }\r\n    }\r\n\r\n    for(var i =0; i<3;i++){\r\n        for(var j = 0; j<3;j++){\r\n            if(sales[j].sales < sales[j+1].sales){\r\n                temp_swap = sales[j].sales;\r\n                sales[j].sales = sales[j+1].sales;\r\n                sales[j+1].sales = temp_swap;\r\n\r\n                temp_swap = sales[j].product;\r\n                sales[j].product = sales[j+1].product;\r\n                sales[j+1].product = temp_swap;\r\n            }\r\n        }\r\n    }\r\n\r\n    for(var i =0; i<3;i++){\r\n        for(var j = 0; j<3;j++){\r\n            if(extra[j].extra < extra[j+1].extra){\r\n                temp_swap = extra[j].extra;\r\n                extra[j].extra = extra[j+1].extra;\r\n                extra[j+1].extra = temp_swap;\r\n\r\n                temp_swap = extra[j].product;\r\n                extra[j].product = extra[j+1].product;\r\n                extra[j+1].product = temp_swap;\r\n            }\r\n        }\r\n    }\r\n    //----------------------------------------------SORT END----------------------------------------------------------\r\n    console.log(backlogs);\r\n    //console.log(times[p_name][0]);\r\n    var step_complete = {step1: 0,step2: 0,step3: 0};\r\n    var step_ends = {step1: 0,step2: 0,step3: 0};\r\n    //---------------------------------------------BACKLOGS-----------------------------------------------------------\r\n    for(var lv = 0; lv<4; lv++){\r\n        var p1_backlogs = backlogs[lv].backlog;\r\n        var p_name = backlogs[lv].product;\r\n        for(var i = 0; i<(backlogs[lv].backlog); i++){\r\n            if(p1_backlogs>0){\r\n                loc = first_index(lines,1,0);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][0]; j++){\r\n                    lines[loc[1]-1].step1[loc[0]+j]  = backlogs[lv].product;\r\n                    step_ends.step1 =loc[0]+j+1;\r\n                }\r\n                p1_backlogs--;\r\n                step_complete.step1++;\r\n            }\r\n            if(step_complete.step1>0){\r\n                loc = first_index(lines,2,step_ends.step1);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][1]; j++){\r\n                    lines[loc[1]-1].step2[loc[0]+j]  = backlogs[lv].product;\r\n                    step_ends.step2 = loc[0]+j+1;\r\n                }\r\n                step_complete.step1--;\r\n                step_complete.step2++;\r\n            }\r\n            if(step_complete.step2>0){\r\n                loc = first_index(lines,3,step_ends.step2);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][2]; j++){\r\n                    lines[loc[1]-1].step3[loc[0]+j]  = backlogs[lv].product;\r\n                    step_ends.step3 = loc[0]+j+1;\r\n                }\r\n                step_complete.step2--;\r\n                step_complete.step3++;\r\n                //console.log(lines[loc[1]].step1[loc[0]] );\r\n            }\r\n        }\r\n    }   \r\n    //---------------------------------------------SALES-----------------------------------------------------------\r\n    \r\n    for(var lv = 0; lv<4; lv++){\r\n        var p1_sales = sales[lv].sales;\r\n        var p_name = sales[lv].product;\r\n        for(var i = 0; i<(sales[lv].sales); i++){\r\n\r\n            if(p1_sales>0){\r\n                loc = first_index(lines,1,0);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][0]; j++){\r\n                    lines[loc[1]-1].step1[loc[0]+j]  = sales[lv].product;\r\n                }\r\n                p1_sales--;\r\n                step_complete.step1++;\r\n            }\r\n            if(step_complete.step1>0){\r\n                loc = first_index(lines,2,step_ends.step1);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][1]; j++){\r\n                    console.log(loc);\r\n                    console.log(step_ends.step2);\r\n                    lines[loc[1]-1].step2[loc[0]+j]  = sales[lv].product;\r\n                }\r\n                step_complete.step1--;\r\n                step_complete.step2++;\r\n            }\r\n            if(step_complete.step2>0){\r\n                loc = first_index(lines,3,step_ends.step2);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][2]; j++){\r\n                    lines[loc[1]-1].step3[loc[0]+j]  = sales[lv].product;\r\n                }\r\n                step_complete.step2--;\r\n                step_complete.step3++;\r\n                //console.log(lines[loc[1]].step1[loc[0]] );\r\n            }\r\n        }\r\n    }\r\n    \r\n    //---------------------------------------------------EXTRA-----------------------------------------------------------\r\n    for(var lv = 0; lv<4; lv++){\r\n        var p1_extra = extra[lv].extra;\r\n        var p_name = extra[lv].product;\r\n        for(var i = 0; i<(extra[lv].extra); i++){\r\n            if(p1_extra>0){\r\n                loc = first_index(lines,1,0);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][0]; j++){\r\n                    lines[loc[1]-1].step1[loc[0]+j]  = extra[lv].product;\r\n                    step_ends.step1 =loc[0]+j+1;\r\n                }\r\n                p1_extra--;\r\n                step_complete.step1++;\r\n            }\r\n            if(step_complete.step1>0){\r\n                loc = first_index(lines,2,step_ends.step1);\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][1]; j++){\r\n                    lines[loc[1]-1].step2[loc[0]+j]  = extra[lv].product;\r\n                    step_ends.step2 = loc[0]+j+1;\r\n                }\r\n                step_complete.step1--;\r\n                step_complete.step2++;\r\n            }\r\n            if(step_complete.step2>0){\r\n                loc = first_index(lines,3,step_ends.step2);\r\n\r\n                for(var t = 0; t<times[p_name][0]; t++){\r\n                    if((loc[0]+t+1)%16 == 0){\r\n                        loc[0] = loc[0] + t+1;\r\n                    }\r\n                }\r\n                for(var j =0; j< times[p_name][2]; j++){\r\n                    lines[loc[1]-1].step3[loc[0]+j]  = extra[lv].product;\r\n                    step_ends.step3 = loc[0]+j+1;\r\n                }\r\n                step_complete.step2--;\r\n                step_complete.step3++;\r\n                //console.log(lines[loc[1]].step1[loc[0]] );\r\n            }\r\n        }\r\n    }   \r\n    \r\n    \r\n        \r\n    //step_complete_temp = (step_complete.step1/6+1)*times[p_name][0]; \r\n\r\n    /*\r\n    console.log(step_complete);\r\n    for(var i = 0; i< step_complete_temp; i++){\r\n        for(var j = 0; j<6 && step_complete.step1>0; j++){\r\n            \r\n            for(var k =0; k<times[p_name][0]; k++){\r\n                lines[j].step1[i+k] = backlogs[0].product ;\r\n            }\r\n            step_complete.step1--;\r\n            step_complete.step2++;\r\n        }\r\n    }\r\n    */\r\n   \r\n//step_complete_temp = (step_complete.step1/6+1)*times[p_name][0]; \r\n\r\n\r\n    console.log(lines);\r\n    //console.log(lines[1].step1[250])\r\n    //console.log(first_index(lines,1));\r\n\r\n\r\n\r\n}\r\n\r\noptimize(input) \r\n\r\n\r\n// bubble_Sort(backlogs)"]},"metadata":{},"sourceType":"module"}